/**
 * 
 */
package com.pramati.imaginea.bObj;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;

import com.pramati.imaginea.Entities.mail;
import com.pramati.imaginea.utilities.CrawlerConstants;

/**take data from the queue and hit the url get the mail object and submit the task to executor for saving
 * @author anandu
 *
 */
public class Consumer implements Runnable{

	private static final String SHUTDOWN_REQ = "SHUTDOWN";
	private BlockingQueue<HttpWebpage> glinkQueue = null;
	private ExecutorService gThreadPool ;
	private File Directory ;
	
	/**
	 * 
	 */
	public Consumer(BlockingQueue<HttpWebpage> queue) {
		this.glinkQueue = queue;
	}

	@Override
	public void run() {
		
		try {
			gThreadPool = Executors.newFixedThreadPool(CrawlerConstants.ThreadPoolSize);
			Directory = new File(CrawlerConstants.saveDirectory);
			while (glinkQueue.take()!= null) {
				JAXBContext jaxbContext = JAXBContext.newInstance(mail.class);  
				Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();  
				mail email= (mail) jaxbUnmarshaller.unmarshal(new URL(glinkQueue.take().getgUrl()));
				gThreadPool.execute(new Saver(Directory,email));
			}
			
			
		} catch (MalformedURLException | JAXBException | InterruptedException e) {
			
			e.printStackTrace();
		}
        
		
	}

}
